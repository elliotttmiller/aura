version: '3.8'

services:
  # Main Aura application
  aura-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aura-sentient-studio
    ports:
      - "8001:8001"
    environment:
      # Application settings
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - DEBUG_MODE=false
      
      # Database (if needed in future)
      # - DATABASE_URL=postgresql://user:pass@db:5432/aura
      
      # Redis cache (if needed in future)
      # - REDIS_URL=redis://redis:6379/0
      
      # Security
      - SESSION_TIMEOUT_MINUTES=60
      - RATE_LIMIT_REQUESTS_PER_MINUTE=60
      
      # API keys (use Docker secrets in production)
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY:-}
      - LM_STUDIO_URL=${LM_STUDIO_URL:-http://localhost:1234/v1/chat/completions}
      
    volumes:
      # Persistent storage
      - ./output:/app/output
      - ./logs:/app/logs
      - ./models:/app/models
      
      # Configuration (optional)
      - ./config.py:/app/config.py:ro
    
    networks:
      - aura-network
    
    restart: unless-stopped
    
    depends_on:
      - redis
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: aura-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis_data:/data
    networks:
      - aura-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: aura-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - aura-network
    depends_on:
      - aura-app
    restart: unless-stopped
    profiles:
      - production

  # PostgreSQL database (optional, for persistent storage)
  db:
    image: postgres:15-alpine
    container_name: aura-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-aura_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
      POSTGRES_DB: ${DB_NAME:-aura}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - aura-network
    restart: unless-stopped
    profiles:
      - with-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-aura_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  aura-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
