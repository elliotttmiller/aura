import bpy class AddonPreferences(bpy.types.AddonPreferences): """User-configurable settings saved across Blender sessions.""" bl_idname = __package__ model_path = bpy.props.StringProperty( name="AI Models Folder", description="Path to the folder containing your .onnx AI models and implicit function parameters", subtype='DIR_PATH', ) compute_device = bpy.props.EnumProperty( name="Compute Device", description="Select the device to run AI computations on (optimized for 8GB VRAM)", items=[('CPU', 'CPU', 'Slower, more compatible'), ('GPU', 'GPU', 'Faster, requires compatible hardware (8GB+ VRAM)')], default='GPU' ) min_feature_thickness = bpy.props.FloatProperty( name="Min Feature Thickness (mm)", description="The minimum acceptable thickness for procedural feature validation", default=0.5, min=0.1, max=5.0 ) # Implicit function precision setting use_fp16 = bpy.props.BoolProperty( name="Use FP16 Precision", description="Use 16-bit floating point for 8GB VRAM compatibility", default=True ) def draw(self, context): layout = self.layout box = layout.box() box.label(text="Design Engine Configuration") box.prop(self, "model_path") box.prop(self, "compute_device") box.prop(self, "use_fp16") box = layout.box() box.label(text="Procedural Analysis Settings") box.prop(self, "min_feature_thickness") def install_preferences(): bpy.utils.register_class(AddonPreferences) def uninstall_preferences(): bpy.utils.unregister_class(AddonPreferences) 